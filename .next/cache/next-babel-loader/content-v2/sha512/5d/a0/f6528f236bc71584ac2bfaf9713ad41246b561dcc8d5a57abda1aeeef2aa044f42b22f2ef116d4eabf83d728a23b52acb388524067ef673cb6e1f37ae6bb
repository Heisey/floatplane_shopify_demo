{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/files/school/react/shopify/demo_1/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/files/school/react/shopify/demo_1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/files/school/react/shopify/demo_1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\files\\\\school\\\\react\\\\shopify\\\\demo_1\\\\components\\\\cards\\\\Discount\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Buttons } from '../../';\nimport content from './content';\nimport styles from './styles';\nimport { useFormik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nvar Discount = function Discount(props) {\n  _s();\n\n  var product = useSelector(function (state) {\n    return state.products.data;\n  });\n\n  var _useState = useState(false),\n      toggleToast = _useState[0],\n      toggleToastHandler = _useState[1];\n\n  var _useState2 = useState(''),\n      toastText = _useState2[0],\n      toastTextHandler = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasWon = _useState3[0],\n      hasWonHandler = _useState3[1];\n\n  var _ref = '',\n      _ref2 = _slicedToArray(_ref, 2),\n      guessMessage = _ref2[0],\n      guessMessageHandler = _ref2[1]; // console.log(product)\n\n\n  var formik = useFormik({\n    initialValues: {\n      guess: ''\n    },\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var _yield$axios, data, _amountOfTries;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios({\n                  method: 'post',\n                  url: '/discounts',\n                  data: {\n                    guess: values.guess,\n                    productId: product.id,\n                    productName: product.title,\n                    productPrice: product.variants[0].price\n                  }\n                });\n\n              case 3:\n                _yield$axios = _context.sent;\n                data = _yield$axios.data;\n                hasWonHandler(data.correct);\n                toggleToastHandler(true);\n                _amountOfTries = data.count;\n\n                if (!data.correct) {\n                  _context.next = 14;\n                  break;\n                }\n\n                toastTextHandler('You have guessed the correct number, you will be redirected in 3 sec');\n                guessMessageHandler(data.message);\n                window.setTimeout(function () {\n                  toggleToastHandler(false);\n                }, 2900);\n                window.setTimeout(function () {\n                  window.location.assign(data.draftOrderUrl);\n                }, 3000);\n                return _context.abrupt(\"return\");\n\n              case 14:\n                console.log('puppies');\n                guessMessageHandler(data.message);\n\n                if (_amountOfTries === 10) {\n                  toastTextHandler('you have hit you maximum number of attempts, restart to try again');\n                } else {\n                  toastTextHandler(\"you have tried \".concat(guessMessage, \" times you have \").concat(10 - _amountOfTries));\n                }\n\n                window.setTimeout(function () {\n                  toggleToastHandler(false);\n                }, 2900);\n                console.log(data);\n                _context.next = 25;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('on submit error');\n                console.log(_context.t0.message);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 21]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(styles.toast, {\n      show: toggleToast,\n      color: hasWon,\n      children: [hasWont && toastText, !hasWon && /*#__PURE__*/_jsxDEV(content.ToastText, {\n        heading: amountOfTries,\n        message: toastText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(styles.Discount, {\n      children: /*#__PURE__*/_jsxDEV(styles.backgroundGraphic, {\n        children: [/*#__PURE__*/_jsxDEV(content.Graphic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(styles.cardBody, {\n          children: [/*#__PURE__*/_jsxDEV(styles.discountTitle, {\n            children: \"what is the number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(styles.input, {\n              id: \"guess\",\n              name: \"guess\",\n              type: \"text\",\n              minLength: \"1\",\n              maxLength: \"4\",\n              placeholder: \"XXXX\",\n              onChange: formik.handleChange,\n              value: formik.values.guess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(styles.buttonContainer, {\n              children: /*#__PURE__*/_jsxDEV(Buttons.Pill, {\n                type: \"submit\",\n                text: \"guess\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(styles.contestRules, {\n            children: \"Guess the correct number to appyly the shown discount. The number is between 1 - 1000, and you have 15 guesses for the correct answer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Discount, \"rCwSFpr5j/pmJVekGeb+78LcDNY=\", false, function () {\n  return [useSelector, useFormik];\n});\n\n_c = Discount;\nexport default Discount;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discount\");","map":{"version":3,"sources":["D:/files/school/react/shopify/demo_1/components/cards/Discount/index.js"],"names":["Buttons","content","styles","useFormik","useSelector","axios","useState","Discount","props","product","state","products","data","toggleToast","toggleToastHandler","toastText","toastTextHandler","hasWon","hasWonHandler","guessMessage","guessMessageHandler","formik","initialValues","guess","onSubmit","values","method","url","productId","id","productName","title","productPrice","variants","price","correct","amountOfTries","count","message","window","setTimeout","location","assign","draftOrderUrl","console","log","hasWont","handleSubmit","handleChange"],"mappings":";;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAE1B,MAAMC,OAAO,GAAGL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAN,CAAeC,IAAnB;AAAA,GAAN,CAA3B;;AAF0B,kBAGgBN,QAAQ,CAAC,KAAD,CAHxB;AAAA,MAGnBO,WAHmB;AAAA,MAGNC,kBAHM;;AAAA,mBAIYR,QAAQ,CAAC,EAAD,CAJpB;AAAA,MAInBS,SAJmB;AAAA,MAIRC,gBAJQ;;AAAA,mBAKMV,QAAQ,CAAC,KAAD,CALd;AAAA,MAKnBW,MALmB;AAAA,MAKXC,aALW;;AAAA,aAMkB,EANlB;AAAA;AAAA,MAMnBC,YANmB;AAAA,MAMLC,mBANK,aAQ1B;;;AAEA,MAAMC,MAAM,GAAGlB,SAAS,CAAC;AACvBmB,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE;AADM,KADQ;AAIvBC,IAAAA,QAAQ;AAAA,+EAAE,iBAAMC,MAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGiBpB,KAAK,CAAC;AAC3BqB,kBAAAA,MAAM,EAAE,MADmB;AAE3BC,kBAAAA,GAAG,EAAE,YAFsB;AAG3Bf,kBAAAA,IAAI,EAAE;AACJW,oBAAAA,KAAK,EAAEE,MAAM,CAACF,KADV;AAEJK,oBAAAA,SAAS,EAAEnB,OAAO,CAACoB,EAFf;AAGJC,oBAAAA,WAAW,EAAErB,OAAO,CAACsB,KAHjB;AAIJC,oBAAAA,YAAY,EAAEvB,OAAO,CAACwB,QAAR,CAAiB,CAAjB,EAAoBC;AAJ9B;AAHqB,iBAAD,CAHtB;;AAAA;AAAA;AAGEtB,gBAAAA,IAHF,gBAGEA,IAHF;AAaNM,gBAAAA,aAAa,CAACN,IAAI,CAACuB,OAAN,CAAb;AACArB,gBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACMsB,gBAAAA,cAfA,GAegBxB,IAAI,CAACyB,KAfrB;;AAAA,qBAiBFzB,IAAI,CAACuB,OAjBH;AAAA;AAAA;AAAA;;AAkBJnB,gBAAAA,gBAAgB,CAAC,sEAAD,CAAhB;AACAI,gBAAAA,mBAAmB,CAACR,IAAI,CAAC0B,OAAN,CAAnB;AACAC,gBAAAA,MAAM,CAACC,UAAP,CAAkB,YAAM;AACtB1B,kBAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,iBAFD,EAEG,IAFH;AAIAyB,gBAAAA,MAAM,CAACC,UAAP,CAAkB,YAAM;AACtBD,kBAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB,CAAuB9B,IAAI,CAAC+B,aAA5B;AACD,iBAFD,EAEG,IAFH;AAxBI;;AAAA;AA+BNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAzB,gBAAAA,mBAAmB,CAACR,IAAI,CAAC0B,OAAN,CAAnB;;AACA,oBAAIF,cAAa,KAAK,EAAtB,EAA0B;AACxBpB,kBAAAA,gBAAgB,CAAC,mEAAD,CAAhB;AACD,iBAFD,MAEO;AACLA,kBAAAA,gBAAgB,0BAAmBG,YAAnB,6BAAkD,KAAKiB,cAAvD,EAAhB;AACD;;AAEDG,gBAAAA,MAAM,CAACC,UAAP,CAAkB,YAAM;AACtB1B,kBAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,iBAFD,EAEG,IAFH;AAGA8B,gBAAAA,OAAO,CAACC,GAAR,CAAYjC,IAAZ;AA1CM;AAAA;;AAAA;AAAA;AAAA;AA+CNgC,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAIP,OAAhB;;AAhDM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJe,GAAD,CAAxB;AAyDA,sBACE;AAAA,4BACA,QAAC,MAAD,CAAQ,KAAR;AACE,MAAA,IAAI,EAAEzB,WADR;AAEE,MAAA,KAAK,EAAEI,MAFT;AAAA,iBAIG6B,OAAO,IAAI/B,SAJd,EAKG,CAACE,MAAD,iBAAW,QAAC,OAAD,CAAS,SAAT;AAAmB,QAAA,OAAO,EAAEmB,aAA5B;AAA2C,QAAA,OAAO,EAAErB;AAApD;AAAA;AAAA;AAAA;AAAA,eALd;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAQA,QAAC,MAAD,CAAQ,QAAR;AAAA,6BACE,QAAC,MAAD,CAAQ,iBAAR;AAAA,gCACE,QAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,MAAD,CAAQ,QAAR;AAAA,kCACE,QAAC,MAAD,CAAQ,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAM,YAAA,QAAQ,EAAEM,MAAM,CAAC0B,YAAvB;AAAA,oCACE,QAAC,MAAD,CAAQ,KAAR;AACE,cAAA,EAAE,EAAC,OADL;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,SAAS,EAAC,GAJZ;AAKE,cAAA,SAAS,EAAC,GALZ;AAME,cAAA,WAAW,EAAC,MANd;AAOE,cAAA,QAAQ,EAAE1B,MAAM,CAAC2B,YAPnB;AAQE,cAAA,KAAK,EAAE3B,MAAM,CAACI,MAAP,CAAcF;AARvB;AAAA;AAAA;AAAA;AAAA,qBADF,eAWE,QAAC,MAAD,CAAQ,eAAR;AAAA,qCACE,QAAC,OAAD,CAAS,IAAT;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAsBE,QAAC,MAAD,CAAQ,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aARA;AAAA,kBADF;AA0CD,CA7GD;;GAAMhB,Q;UAEYH,W,EAQDD,S;;;KAVXI,Q;AA+GN,eAAeA,QAAf","sourcesContent":["import { Buttons } from '../../'\r\nimport content from './content'\r\nimport styles from './styles'\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { useState } from 'react'\r\n\r\nconst Discount = (props) => {\r\n\r\n  const product = useSelector(state => state.products.data)\r\n  const [toggleToast, toggleToastHandler] = useState(false)\r\n  const [toastText, toastTextHandler] = useState('')\r\n  const [hasWon, hasWonHandler] = useState(false)\r\n  const [guessMessage, guessMessageHandler] = ''\r\n\r\n  // console.log(product)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      guess: '',\r\n    },\r\n    onSubmit: async values => {\r\n      try {\r\n        \r\n        const { data } = await axios({\r\n          method: 'post',\r\n          url: '/discounts',\r\n          data: {\r\n            guess: values.guess,\r\n            productId: product.id,\r\n            productName: product.title,\r\n            productPrice: product.variants[0].price\r\n          }\r\n        })\r\n        hasWonHandler(data.correct)\r\n        toggleToastHandler(true)\r\n        const amountOfTries = data.count\r\n\r\n        if (data.correct) {\r\n          toastTextHandler('You have guessed the correct number, you will be redirected in 3 sec')\r\n          guessMessageHandler(data.message)\r\n          window.setTimeout(() => {\r\n            toggleToastHandler(false)\r\n          }, 2900)\r\n\r\n          window.setTimeout(() => {\r\n            window.location.assign(data.draftOrderUrl)\r\n          }, 3000)\r\n\r\n          return\r\n        }\r\n        \r\n        console.log('puppies')\r\n        guessMessageHandler(data.message)\r\n        if (amountOfTries === 10) {\r\n          toastTextHandler('you have hit you maximum number of attempts, restart to try again')\r\n        } else {\r\n          toastTextHandler(`you have tried ${guessMessage} times you have ${10 - amountOfTries}`)\r\n        }\r\n\r\n        window.setTimeout(() => {\r\n          toggleToastHandler(false)\r\n        }, 2900)\r\n        console.log(data)\r\n\r\n        \r\n        \r\n      } catch (err) {\r\n        console.log('on submit error')\r\n        console.log(err.message)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <styles.toast \r\n      show={toggleToast}\r\n      color={hasWon}\r\n    >\r\n      {hasWont && toastText}\r\n      {!hasWon && <content.ToastText heading={amountOfTries} message={toastText} />}\r\n    </styles.toast>\r\n    <styles.Discount>\r\n      <styles.backgroundGraphic>\r\n        <content.Graphic />\r\n        <styles.cardBody>\r\n          <styles.discountTitle>\r\n            what is the number\r\n          </styles.discountTitle>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <styles.input \r\n              id='guess'\r\n              name='guess'\r\n              type='text'\r\n              minLength='1'\r\n              maxLength='4'\r\n              placeholder='XXXX'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.guess}\r\n            />\r\n            <styles.buttonContainer>\r\n              <Buttons.Pill \r\n                type='submit'\r\n                text='guess'\r\n              />\r\n            </styles.buttonContainer>\r\n          </form>\r\n          <styles.contestRules>\r\n            Guess the correct number to appyly the shown discount. The number is between 1 - 1000, and you have 15 guesses for the correct answer.\r\n          </styles.contestRules>\r\n        </styles.cardBody>\r\n      </styles.backgroundGraphic>\r\n    </styles.Discount>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Discount"]},"metadata":{},"sourceType":"module"}