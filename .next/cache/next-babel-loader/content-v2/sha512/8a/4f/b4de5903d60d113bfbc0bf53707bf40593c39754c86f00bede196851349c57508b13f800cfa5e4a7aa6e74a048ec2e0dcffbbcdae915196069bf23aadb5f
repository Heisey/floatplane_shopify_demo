{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\files\\\\school\\\\react\\\\shopify\\\\demo_1\\\\components\\\\pages\\\\Products\\\\index.js\";\nimport Link from 'next/link';\nimport { useEffect, useState } from 'react';\nimport { Cards } from '../../';\nimport { utils } from '../../../core';\nimport styles from './styles';\n\nconst Products = props => {\n  const {\n    0: products,\n    1: productsHandler\n  } = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch('/api/products');\n        const data = await response.json();\n        utils.handleState(data.products, productsHandler);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getData();\n  }, []);\n\n  const generatePath = (base, endpoint) => {\n    console.log(base);\n    console.log(endpoint);\n    return '/';\n  };\n\n  const generateProductCards = products => {\n    console.log(products);\n    const grid = utils.generateGrid(products);\n    return grid.map((row, index) => /*#__PURE__*/_jsxDEV(styles.cardRow, {\n      children: row.map(product => /*#__PURE__*/_jsxDEV(Link, {\n        href: generatePath('/products', product.id),\n        children: /*#__PURE__*/_jsxDEV(Cards.ProductCard, {\n          image: product.image.src,\n          name: product.title,\n          price: product.variants[0].price\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(styles.Products, {\n    children: products && generateProductCards(products)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Products;","map":{"version":3,"sources":["D:/files/school/react/shopify/demo_1/components/pages/Products/index.js"],"names":["Link","useEffect","useState","Cards","utils","styles","Products","props","products","productsHandler","getData","response","fetch","data","json","handleState","err","console","log","generatePath","base","endpoint","generateProductCards","grid","generateGrid","map","row","index","product","id","image","src","title","variants","price"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA8BP,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AAEA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAV,QAAAA,KAAK,CAACW,WAAN,CAAkBF,IAAI,CAACL,QAAvB,EAAiCC,eAAjC;AACD,OAND,CAME,OAAOO,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KAVD;;AAYAN,IAAAA,OAAO;AACR,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMS,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAEA,WAAO,GAAP;AACD,GALD;;AAOA,QAAMC,oBAAoB,GAAId,QAAD,IAAc;AACzCS,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,UAAMe,IAAI,GAAGnB,KAAK,CAACoB,YAAN,CAAmBhB,QAAnB,CAAb;AACA,WAAOe,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACd,QAAC,MAAD,CAAQ,OAAR;AAAA,gBACCD,GAAG,CAACD,GAAJ,CAAQG,OAAO,iBACd,QAAC,IAAD;AAAM,QAAA,IAAI,EAAET,YAAY,CAAC,WAAD,EAAcS,OAAO,CAACC,EAAtB,CAAxB;AAAA,+BACE,QAAC,KAAD,CAAO,WAAP;AAEE,UAAA,KAAK,EAAED,OAAO,CAACE,KAAR,CAAcC,GAFvB;AAGE,UAAA,IAAI,EAAEH,OAAO,CAACI,KAHhB;AAIE,UAAA,KAAK,EAAEJ,OAAO,CAACK,QAAR,CAAiB,CAAjB,EAAoBC;AAJ7B,WACON,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADD,OAAqBF,KAArB;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAcD,GAjBD;;AAmBA,sBACE,QAAC,MAAD,CAAQ,QAAR;AAAA,cACGnB,QAAQ,IAAIc,oBAAoB,CAACd,QAAD;AADnC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnDD;;AAqDA,eAAeF,QAAf","sourcesContent":["import Link from 'next/link'\r\nimport { useEffect, useState } from 'react'\r\nimport { Cards } from '../../'\r\nimport { utils } from '../../../core'\r\n\r\nimport styles from './styles'\r\n\r\nconst Products = (props) => {\r\n\r\n  const [products, productsHandler] = useState(null)\r\n  \r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await fetch('/api/products')\r\n\r\n        const data = await response.json()\r\n        \r\n        utils.handleState(data.products, productsHandler)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    \r\n    getData()\r\n  }, [])\r\n\r\n  const generatePath = (base, endpoint) => {\r\n    console.log(base)\r\n    console.log(endpoint)\r\n\r\n    return '/'\r\n  }\r\n\r\n  const generateProductCards = (products) => {\r\n    console.log(products)\r\n    const grid = utils.generateGrid(products)\r\n    return grid.map((row, index) => (\r\n      <styles.cardRow key={index}>\r\n      {row.map(product => (\r\n        <Link href={generatePath('/products', product.id)}>\r\n          <Cards.ProductCard \r\n            key={product.id}\r\n            image={product.image.src}\r\n            name={product.title}\r\n            price={product.variants[0].price}\r\n          />\r\n        </Link>\r\n      )) }\r\n      </styles.cardRow>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <styles.Products>\r\n      {products && generateProductCards(products)}\r\n    </styles.Products>\r\n  )\r\n}\r\n\r\nexport default Products"]},"metadata":{},"sourceType":"module"}