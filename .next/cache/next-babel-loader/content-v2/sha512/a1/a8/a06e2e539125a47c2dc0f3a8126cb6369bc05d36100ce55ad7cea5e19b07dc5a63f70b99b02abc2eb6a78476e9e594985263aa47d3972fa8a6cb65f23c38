{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\files\\\\school\\\\react\\\\shopify\\\\demo_1\\\\components\\\\cards\\\\Discount\\\\index.js\";\nimport { Buttons } from '../../';\nimport content from './content';\nimport styles from './styles';\nimport { useFormik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nconst Discount = props => {\n  const product = useSelector(state => state.products.data);\n  const {\n    0: toggleToast,\n    1: toggleToastHandler\n  } = useState(false);\n  const {\n    0: toastText,\n    1: toastTextHandler\n  } = useState('');\n  const {\n    0: hasWon,\n    1: hasWonHandler\n  } = useState(false); // console.log(product)\n\n  const formik = useFormik({\n    initialValues: {\n      guess: ''\n    },\n    onSubmit: async values => {\n      try {\n        const {\n          data\n        } = await axios({\n          method: 'post',\n          url: '/discounts',\n          data: {\n            guess: values.guess,\n            productId: product.id,\n            productName: product.title,\n            productPrice: product.variants[0].price\n          }\n        });\n        hasWonHandler(data.correct);\n        toggleToastHandler(true);\n        const amountOfTries = data.count;\n\n        if (data.correct) {\n          toastTextHandler('You have guessed the correct number, you will be redirected in 3 sec');\n          window.setTimeout(() => {\n            toggleToastHandler(false);\n          }, 2900);\n          window.setTimeout(() => {\n            window.location.assign(data.draftOrderUrl);\n          }, 3000);\n          return;\n        }\n\n        console.log('puppies');\n\n        if (amountOfTries === 10) {\n          toastTextHandler('you have hit you maximum number of attempts, restart to try again');\n        } else {\n          toastTextHandler(`you have tried ${amountOfTries} times you have ${10 - amountOfTries}`);\n        }\n\n        window.setTimeout(() => {\n          toggleToastHandler(false);\n        }, 2900);\n        console.log(data);\n      } catch (err) {\n        console.log('on submit error');\n        console.log(err.message);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(styles.toast, {\n      show: toggleToast,\n      color: hasWon,\n      children: toastText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(styles.Discount, {\n      children: /*#__PURE__*/_jsxDEV(styles.backgroundGraphic, {\n        children: [/*#__PURE__*/_jsxDEV(content.Graphic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(styles.cardBody, {\n          children: [/*#__PURE__*/_jsxDEV(styles.discountTitle, {\n            children: \"what is the number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(styles.input, {\n              id: \"guess\",\n              name: \"guess\",\n              type: \"text\",\n              minLength: \"1\",\n              maxLength: \"4\",\n              placeholder: \"XXXX\",\n              onChange: formik.handleChange,\n              value: formik.values.guess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(styles.buttonContainer, {\n              children: /*#__PURE__*/_jsxDEV(Buttons.Pill, {\n                type: \"submit\",\n                text: \"guess\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(styles.contestRules, {\n            children: \"Guess the correct number to appyly the shown discount. The number is between 1 - 1000, and you have 15 guesses for the correct answer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Discount;","map":{"version":3,"sources":["D:/files/school/react/shopify/demo_1/components/cards/Discount/index.js"],"names":["Buttons","content","styles","useFormik","useSelector","axios","useState","Discount","props","product","state","products","data","toggleToast","toggleToastHandler","toastText","toastTextHandler","hasWon","hasWonHandler","formik","initialValues","guess","onSubmit","values","method","url","productId","id","productName","title","productPrice","variants","price","correct","amountOfTries","count","window","setTimeout","location","assign","draftOrderUrl","console","log","err","message","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { Buttons } from '../../'\r\nimport content from './content'\r\nimport styles from './styles'\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { useState } from 'react'\r\n\r\nconst Discount = (props) => {\r\n\r\n  const product = useSelector(state => state.products.data)\r\n  const [toggleToast, toggleToastHandler] = useState(false)\r\n  const [toastText, toastTextHandler] = useState('')\r\n  const [hasWon, hasWonHandler] = useState(false)\r\n\r\n  // console.log(product)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      guess: '',\r\n    },\r\n    onSubmit: async values => {\r\n      try {\r\n        \r\n        const { data } = await axios({\r\n          method: 'post',\r\n          url: '/discounts',\r\n          data: {\r\n            guess: values.guess,\r\n            productId: product.id,\r\n            productName: product.title,\r\n            productPrice: product.variants[0].price\r\n          }\r\n        })\r\n        hasWonHandler(data.correct)\r\n        toggleToastHandler(true)\r\n        const amountOfTries = data.count\r\n\r\n        if (data.correct) {\r\n          toastTextHandler('You have guessed the correct number, you will be redirected in 3 sec')\r\n\r\n          window.setTimeout(() => {\r\n            toggleToastHandler(false)\r\n          }, 2900)\r\n\r\n          window.setTimeout(() => {\r\n            window.location.assign(data.draftOrderUrl)\r\n          }, 3000)\r\n\r\n          return\r\n        }\r\n        \r\n        console.log('puppies')\r\n\r\n        if (amountOfTries === 10) {\r\n          toastTextHandler('you have hit you maximum number of attempts, restart to try again')\r\n        } else {\r\n          toastTextHandler(`you have tried ${amountOfTries} times you have ${10 - amountOfTries}`)\r\n        }\r\n\r\n        window.setTimeout(() => {\r\n          toggleToastHandler(false)\r\n        }, 2900)\r\n        console.log(data)\r\n\r\n        \r\n        \r\n      } catch (err) {\r\n        console.log('on submit error')\r\n        console.log(err.message)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <styles.toast \r\n      show={toggleToast}\r\n      color={hasWon}\r\n    >\r\n      {toastText}\r\n    </styles.toast>\r\n    <styles.Discount>\r\n      <styles.backgroundGraphic>\r\n        <content.Graphic />\r\n        <styles.cardBody>\r\n          <styles.discountTitle>\r\n            what is the number\r\n          </styles.discountTitle>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <styles.input \r\n              id='guess'\r\n              name='guess'\r\n              type='text'\r\n              minLength='1'\r\n              maxLength='4'\r\n              placeholder='XXXX'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.guess}\r\n            />\r\n            <styles.buttonContainer>\r\n              <Buttons.Pill \r\n                type='submit'\r\n                text='guess'\r\n              />\r\n            </styles.buttonContainer>\r\n          </form>\r\n          <styles.contestRules>\r\n            Guess the correct number to appyly the shown discount. The number is between 1 - 1000, and you have 15 guesses for the correct answer.\r\n          </styles.contestRules>\r\n        </styles.cardBody>\r\n      </styles.backgroundGraphic>\r\n    </styles.Discount>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Discount"]},"metadata":{},"sourceType":"module"}