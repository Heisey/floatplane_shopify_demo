{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\files\\\\school\\\\react\\\\shopify\\\\demo_1\\\\components\\\\pages\\\\Products\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Cards } from '../../';\nimport { utils } from '../../../core';\nimport { actions } from '../../../store';\nimport styles from './styles';\n\nvar Products = function Products(props) {\n  _s();\n\n  var productsData = useSelector(function (state) {\n    return state.products.data;\n  });\n\n  if (productsData !== null) {\n    console.log('puppy1', productsData);\n  }\n\n  console.log('puppy2', productsData);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    actions.productActions.getAll(dispatch);\n  }, []);\n\n  var generateProductCards = function generateProductCards(products) {\n    console.log();\n    return 'puppies'; // const grid = utils.generateGrid(products)\n    // return grid.map((row, index) => (\n    //   <styles.cardRow key={index}>\n    //   {row.map(product => (\n    //     <Cards.ProductCard \n    //       key={product.id}\n    //       id={product.id}\n    //       image={product.image.src}\n    //       name={product.title}\n    //       price={product.variants[0].price}\n    //     />\n    //   )) }\n    //   </styles.cardRow>\n    // ))\n  };\n\n  return /*#__PURE__*/_jsxDEV(styles.Products, {\n    children: products && generateProductCards(productsData)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Products, \"8Bz3ghQExNUyyaoAgh4D7+MuR0U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["D:/files/school/react/shopify/demo_1/components/pages/Products/index.js"],"names":["useEffect","useState","useDispatch","useSelector","Cards","utils","actions","styles","Products","props","productsData","state","products","data","console","log","dispatch","productActions","getAll","generateProductCards"],"mappings":";;;;;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAE1B,MAAMC,YAAY,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAN,CAAeC,IAAnB;AAAA,GAAN,CAAhC;;AAEA,MAAIH,YAAY,KAAK,IAArB,EAA2B;AACzBI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBL,YAArB;AACD;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,YAAtB;AACA,MAAMM,QAAQ,GAAGd,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACVM,IAAAA,OAAO,CAACW,cAAR,CAAuBC,MAAvB,CAA8BF,QAA9B;AACL,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,QAAD,EAAc;AACzCE,IAAAA,OAAO,CAACC,GAAR;AACA,WAAO,SAAP,CAFyC,CAGzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjBD;;AAmBA,sBACE,QAAC,MAAD,CAAQ,QAAR;AAAA,cACGH,QAAQ,IAAIO,oBAAoB,CAACT,YAAD;AADnC;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAtCD;;GAAMF,Q;UAEiBL,W,EAMJD,W;;;KARbM,Q;AAwCN,eAAeA,QAAf","sourcesContent":["\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Cards } from '../../'\r\nimport { utils } from '../../../core'\r\nimport { actions } from '../../../store'\r\n\r\nimport styles from './styles'\r\n\r\nconst Products = (props) => {\r\n\r\n  const productsData = useSelector(state => state.products.data)\r\n\r\n  if (productsData !== null) {\r\n    console.log('puppy1',productsData)\r\n  }\r\n  console.log('puppy2', productsData)\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n        actions.productActions.getAll(dispatch)\r\n  }, [])\r\n\r\n  const generateProductCards = (products) => {\r\n    console.log()\r\n    return 'puppies'\r\n    // const grid = utils.generateGrid(products)\r\n    // return grid.map((row, index) => (\r\n    //   <styles.cardRow key={index}>\r\n    //   {row.map(product => (\r\n    //     <Cards.ProductCard \r\n    //       key={product.id}\r\n    //       id={product.id}\r\n    //       image={product.image.src}\r\n    //       name={product.title}\r\n    //       price={product.variants[0].price}\r\n    //     />\r\n    //   )) }\r\n    //   </styles.cardRow>\r\n    // ))\r\n  }\r\n\r\n  return (\r\n    <styles.Products>\r\n      {products && generateProductCards(productsData)}\r\n    </styles.Products>\r\n  )\r\n}\r\n\r\nexport default Products"]},"metadata":{},"sourceType":"module"}