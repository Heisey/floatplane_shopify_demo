{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\files\\\\school\\\\react\\\\shopify\\\\demo_1\\\\components\\\\pages\\\\AdminDashboard\\\\index.js\";\nimport { withTheme } from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { utils } from '../../../core';\nimport { actions } from '../../../store';\nimport content from './content';\nimport styles from './styles';\nimport Navigation from '../../navigation';\n\nconst AdminDashboard = props => {\n  const {\n    theme\n  } = props;\n  const productsState = useSelector(state => state.products);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    actions.productActions.getAll(dispatch);\n  }, []);\n\n  const generateGrid = products => {\n    const grid = [];\n    let row = [];\n\n    for (let x = 0; x < products.length; x++) {\n      if (x !== 0) {\n        if (x % 3 === 0) {\n          grid.push(row);\n          row = [];\n          row.push(products[x]);\n        } else {\n          row.push(products[x]);\n        }\n      } else {\n        row.push(products[x]);\n      }\n    }\n\n    if (row.length !== 0) {\n      grid.push(row);\n    }\n\n    return grid;\n  };\n\n  const generateProductCards = products => {\n    const grid = generateGrid(products);\n    console.log(products[0]);\n    return grid.map(row => /*#__PURE__*/_jsxDEV(styles.cardRow, {\n      children: row.map(product => /*#__PURE__*/_jsxDEV(content.Card, {\n        color: theme.colors.tertiaryColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(styles.AdminDashboard, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation.AdminMain, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(styles.cardContainer, {\n      children: productsState.data && generateProductCards(productsState.data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withTheme(AdminDashboard);","map":{"version":3,"sources":["D:/files/school/react/shopify/demo_1/components/pages/AdminDashboard/index.js"],"names":["withTheme","useEffect","useState","useDispatch","useSelector","utils","actions","content","styles","Navigation","AdminDashboard","props","theme","productsState","state","products","dispatch","productActions","getAll","generateGrid","grid","row","x","length","push","generateProductCards","console","log","map","product","colors","tertiaryColor","data"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,QAAME,aAAa,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAjC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACW,cAAR,CAAuBC,MAAvB,CAA8BF,QAA9B;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,YAAY,GAAIJ,QAAD,IAAc;AACjC,UAAMK,IAAI,GAAG,EAAb;AACA,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACQ,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAIA,CAAC,KAAK,CAAV,EAAa;AACX,YAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACfF,UAAAA,IAAI,CAACI,IAAL,CAAUH,GAAV;AACAA,UAAAA,GAAG,GAAG,EAAN;AACAA,UAAAA,GAAG,CAACG,IAAJ,CAAST,QAAQ,CAACO,CAAD,CAAjB;AACD,SAJD,MAIO;AACLD,UAAAA,GAAG,CAACG,IAAJ,CAAST,QAAQ,CAACO,CAAD,CAAjB;AACD;AACF,OARD,MAQO;AACLD,QAAAA,GAAG,CAACG,IAAJ,CAAST,QAAQ,CAACO,CAAD,CAAjB;AACD;AACF;;AAED,QAAID,GAAG,CAACE,MAAJ,KAAe,CAAnB,EAAsB;AACpBH,MAAAA,IAAI,CAACI,IAAL,CAAUH,GAAV;AACD;;AAED,WAAOD,IAAP;AACD,GAtBD;;AAwBA,QAAMK,oBAAoB,GAAIV,QAAD,IAAc;AAEzC,UAAMK,IAAI,GAAGD,YAAY,CAACJ,QAAD,CAAzB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAAC,CAAD,CAApB;AACA,WAAOK,IAAI,CAACQ,GAAL,CAASP,GAAG,iBACjB,QAAC,MAAD,CAAQ,OAAR;AAAA,gBACCA,GAAG,CAACO,GAAJ,CAAQC,OAAO,iBACd,QAAC,OAAD,CAAS,IAAT;AACE,QAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaC;AADtB;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AASD,GAbD;;AAcA,sBACE,QAAC,MAAD,CAAQ,cAAR;AAAA,4BACE,QAAC,UAAD,CAAY,SAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD,CAAQ,aAAR;AAAA,gBACGlB,aAAa,CAACmB,IAAd,IAAsBP,oBAAoB,CAACZ,aAAa,CAACmB,IAAf;AAD7C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzDD;;AA2DA,eAAehC,SAAS,CAACU,cAAD,CAAxB","sourcesContent":["import { withTheme } from 'styled-components'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { utils } from '../../../core'\r\nimport { actions } from '../../../store'\r\nimport content from './content'\r\nimport styles from './styles'\r\n\r\nimport Navigation from '../../navigation'\r\n\r\nconst AdminDashboard = (props) => {\r\n\r\n  const { theme } = props\r\n\r\n  const productsState = useSelector(state => state.products)\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    actions.productActions.getAll(dispatch)\r\n  }, [])\r\n\r\n  const generateGrid = (products) => {\r\n    const grid = []\r\n    let row = []\r\n    for (let x = 0; x < products.length; x++) {\r\n      if (x !== 0) {\r\n        if (x % 3 === 0) {\r\n          grid.push(row)\r\n          row = []\r\n          row.push(products[x])\r\n        } else {\r\n          row.push(products[x])\r\n        }\r\n      } else {\r\n        row.push(products[x])\r\n      }\r\n    }\r\n\r\n    if (row.length !== 0) {\r\n      grid.push(row)\r\n    }\r\n\r\n    return grid\r\n  }\r\n\r\n  const generateProductCards = (products) => {\r\n    \r\n    const grid = generateGrid(products)\r\n    console.log(products[0])\r\n    return grid.map(row => (\r\n      <styles.cardRow>\r\n      {row.map(product => (\r\n        <content.Card\r\n          color={theme.colors.tertiaryColor}\r\n        />\r\n      )) }\r\n      </styles.cardRow>\r\n    ))\r\n  }\r\n  return (\r\n    <styles.AdminDashboard>\r\n      <Navigation.AdminMain />\r\n      <styles.cardContainer>\r\n        {productsState.data && generateProductCards(productsState.data)}\r\n      </styles.cardContainer>\r\n    </styles.AdminDashboard>\r\n  )\r\n}\r\n\r\nexport default withTheme(AdminDashboard)"]},"metadata":{},"sourceType":"module"}